<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="readyTable1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>