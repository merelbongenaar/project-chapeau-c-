<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="readyTable1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>